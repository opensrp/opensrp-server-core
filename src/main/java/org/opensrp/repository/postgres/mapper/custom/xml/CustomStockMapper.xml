<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
        namespace="org.opensrp.repository.postgres.mapper.custom.CustomStockMapper">

    <sql id="Base_Column_List">
        id, json
    </sql>

    <sql id="Base_Table_List">
        from core.identifier_source i
    </sql>


    <insert id="insertSelectiveAndSetId" parameterType="org.opensrp.domain.postgres.Stock"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into core.stock
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="json != null">
                json,
            </if>
            server_version
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="json != null">
                #{json,jdbcType=OTHER,typeHandler=org.opensrp.repository.postgres.handler.StockTypeHandler},
            </if>
            nextVal('core.stock_server_version_seq')
        </trim>
    </insert>

    <select id="selectByIdentifierAndLocationId" parameterType="map"
            resultMap="org.opensrp.repository.postgres.mapper.StockMapper.BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM core.stock
        WHERE json ->> 'identifier' = #{identifier,jdbcType=VARCHAR}
        AND
        json ->> 'locationId' = #{locationId,jdbcType=VARCHAR}
        AND
        date_deleted is null
    </select>

    <update id="updateByPrimaryKeyAndGenerateServerVersion"
            parameterType="org.opensrp.domain.postgres.Stock">
        update core.stock
        set json = #{json,jdbcType=OTHER,typeHandler=org.opensrp.repository.postgres.handler.StockTypeHandler},
        date_deleted = #{dateDeleted,jdbcType=TIMESTAMP},
        server_version = nextVal('core.stock_server_version_seq')
        where id = #{id,jdbcType=BIGINT}
    </update>


    <select id="selectServerVersionByPrimaryKey"
            parameterType="java.lang.Long" resultType="long">
        select server_version from core.stock where id = #{id,jdbcType=BIGINT}
    </select>

</mapper>
