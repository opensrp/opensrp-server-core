<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.opensrp.repository.postgres.mapper.custom.CustomEventMetadataMapper">

	<resultMap id="BaseEventResultMap" type="org.opensrp.domain.postgres.Event">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="json" jdbcType="OTHER" property="json"
				typeHandler="org.opensrp.repository.postgres.handler.EventTypeHandler" />
	</resultMap>

	<sql id="Base_Event_Column_List">
		e.id, e.json
	</sql>

	<sql id="Event_Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and em.${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and em.${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and em.${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and em.${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
											 open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<sql id="Rowbounds_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
					 separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and em.${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and em.${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and em.${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and em.${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
											 open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<select id="selectByDocumentId" parameterType="java.lang.String"
			resultMap="BaseEventResultMap">
		select
		<include refid="Base_Event_Column_List" />
		from core.event e
		where e.id = (select em.event_id from core.event_metadata em
		where em.document_id = #{documentId,jdbcType=VARCHAR} and em.date_deleted is null)
	</select>

	<select id="selectPrimaryKey" parameterType="org.opensrp.domain.postgres.EventMetadataExample"
		resultType="java.lang.Long">
		select event_id
		from core.event_metadata em
		<if test="_parameter != null">
			<include refid="Event_Example_Where_Clause" />
		</if>
	</select>

	<select id="selectMany" parameterType="org.opensrp.domain.postgres.EventMetadataExample"
			resultMap="BaseEventResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Event_Column_List" />
		from core.event e
		where e.id in (
		select em.event_id
		from core.event_metadata em
		<if test="_parameter != null">
			<include refid="Event_Example_Where_Clause" />
		</if>
		)
		<if test="orderByClause != null">
			order by e.${orderByClause}
		</if>
	</select>



	<select id="selectNotInOpenMRSByServerVersion" parameterType="map"
			resultMap="BaseEventResultMap">
		select
		<include refid="Base_Event_Column_List" />
		from core.event e
		where e.id in (select em.event_id from core.event_metadata em
		where (em.openmrs_uuid is null or em.openmrs_uuid = '')
		and em.server_version between #{from,jdbcType=BIGINT} and #{to,jdbcType=BIGINT}
		and em.date_deleted is null)
		LIMIT #{limit}
	</select>

	<select id="selectNotInOpenMRSByServerVersionAndType" parameterType="map"
			resultMap="BaseEventResultMap">
		select
		<include refid="Base_Event_Column_List" />
		from core.event e
		where e.id in (select em.event_id from core.event_metadata em
		where (em.openmrs_uuid is null or em.openmrs_uuid = '')
		and em.event_type = #{eventType,jdbcType=VARCHAR}
		and em.server_version between #{from,jdbcType=BIGINT} and #{to,jdbcType=BIGINT}
		and em.date_deleted is null)
		LIMIT #{limit}
	</select>


	<select id="selectManyWithRowBounds" resultMap="BaseEventResultMap">
		select
		<if test="example.distinct">
			distinct
		</if>
		<include refid="Base_Event_Column_List" />
		from core.event_metadata em
		inner join core.event e on em.event_id = e.id
		<if test="_parameter != null">
			<include refid="Rowbounds_Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by em.${example.orderByClause}
		</if>
		LIMIT #{limit} OFFSET #{offset}
	</select>

	<select id="selectManyIds" resultType="java.lang.String">
		select
		<if test="example.distinct">
			distinct
		</if>
		document_id
		from core.event_metadata em
		<if test="_parameter != null">
			<include refid="Rowbounds_Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by em.${example.orderByClause}
		</if>
		LIMIT #{limit} OFFSET #{offset}
	</select>

	<select id="selectManyBaseEntityIds" resultType="java.lang.String">
		select
		<if test="example.distinct">
			distinct
		</if>
		base_entity_id
		from core.event_metadata em
		<if test="_parameter != null">
			<include refid="Rowbounds_Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by em.${example.orderByClause}
		</if>
	</select>

	<select id="selectByBaseEntityIdAndPlanIdentifier" parameterType="map"
			resultMap="BaseEventResultMap">
		select
		<include refid="Base_Event_Column_List" />
		from core.event e
		where e.id = (select em.event_id from core.event_metadata em
		where em.base_entity_id = #{baseEntityId,jdbcType=VARCHAR} and
		em.plan_identifier = #{planIdentifier,jdbcType=VARCHAR})
	</select>

</mapper>
