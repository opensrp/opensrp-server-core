<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.opensrp.repository.postgres.mapper.custom.CustomPractitionerMapper">

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <select id="selectMany"
            resultMap="org.opensrp.repository.postgres.mapper.PractitionerMapper.BaseResultMap">
        select
        <include
                refid="org.opensrp.repository.postgres.mapper.PractitionerMapper.Base_Column_List" />
        from team.practitioner p
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null">
            order by p.${example.orderByClause}
        </if>
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="selectManyByOrgId"
            resultMap="org.opensrp.repository.postgres.mapper.PractitionerMapper.BaseResultMap">
        select
        <include
                refid="org.opensrp.repository.postgres.mapper.PractitionerMapper.Base_Column_List" />
        FROM team.practitioner

        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>

         AND id in
        (SELECT practitioner_id FROM team.practitioner_role WHERE organization_id = #{orgId} )

        <if test="example.orderByClause != null">
            order by p.${example.orderByClause}
        </if>
        LIMIT #{limit} OFFSET #{offset}
    </select>
    <update id="updateByPrimaryKeyAndGenerateServerVersion" parameterType="org.opensrp.domain.postgres.Practitioner">
        update team.practitioner
        set identifier = #{identifier,jdbcType=VARCHAR},
        active = #{active,jdbcType=BIT},
        name = #{name,jdbcType=VARCHAR},
        user_id = #{userId,jdbcType=VARCHAR},
        username = #{username,jdbcType=VARCHAR},
        date_deleted = #{dateDeleted,jdbcType=TIMESTAMP},
        date_created = #{dateCreated,jdbcType=TIMESTAMP},
        date_edited = #{dateEdited,jdbcType=TIMESTAMP},
        server_version = nextVal('team.practitioner_server_version_seq'),
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectServerVersionByPrimaryKey" parameterType="java.lang.Long" resultType="long">
        select server_version from team.practitioner where id = #{id,jdbcType=BIGINT}
    </select>
</mapper>
