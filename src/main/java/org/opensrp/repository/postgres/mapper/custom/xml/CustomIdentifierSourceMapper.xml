<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
        namespace="org.opensrp.repository.postgres.mapper.custom.CustomIdentifierSourceMapper">

    <sql id="Base_Column_List">
        i.id, i.identifier, i.description, i.identifier_validator_algorithm, i.base_character_set,
        i.first_identifier_base, i.prefix, i.suffix, i.min_length, i.max_length, i.regex_format , i.sequence_value
    </sql>

    <sql id="Base_Table_List">
        from core.identifier_source i
    </sql>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and i.${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and i.${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and i.${criterion.condition} #{criterion.value}
                                    and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and i.${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem"
                                             open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <select id="selectByIdentifier" parameterType="java.lang.String"
            resultMap="org.opensrp.repository.postgres.mapper.IdentifierSourceMapper.BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from core.identifier_source i
        where i.identifier = #{identifier,jdbcType=VARCHAR}
    </select>

    <select id="selectMany"
            resultMap="org.opensrp.repository.postgres.mapper.IdentifierSourceMapper.BaseResultMap">
        select
        <if test="example.distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        <include refid="Base_Table_List"/>
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="example.orderByClause != null">
            order by i.${example.orderByClause}
        </if>
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="selectOne"
            resultMap="org.opensrp.repository.postgres.mapper.IdentifierSourceMapper.BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        <include refid="Base_Table_List"/>
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <insert id="insertSelectiveAndSetId" parameterType="org.opensrp.domain.postgres.IdentifierSource"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into core.identifier_source
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="identifier != null">
                identifier,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="identifierValidatorAlgorithm != null">
                identifier_validator_algorithm,
            </if>
            <if test="baseCharacterSet != null">
                base_character_set,
            </if>
            <if test="firstIdentifierBase != null">
                first_identifier_base,
            </if>
            <if test="prefix != null">
                prefix,
            </if>
            <if test="suffix != null">
                suffix,
            </if>
            <if test="minLength != null">
                min_length,
            </if>
            <if test="maxLength != null">
                max_length,
            </if>
            <if test="regexFormat != null">
                regex_format,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="identifier != null">
                #{identifier,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="identifierValidatorAlgorithm != null">
                #{identifierValidatorAlgorithm,jdbcType=VARCHAR},
            </if>
            <if test="baseCharacterSet != null">
                #{baseCharacterSet,jdbcType=VARCHAR},
            </if>
            <if test="firstIdentifierBase != null">
                #{firstIdentifierBase,jdbcType=VARCHAR},
            </if>
            <if test="prefix != null">
                #{prefix,jdbcType=VARCHAR},
            </if>
            <if test="suffix != null">
                #{suffix,jdbcType=VARCHAR},
            </if>
            <if test="minLength != null">
                #{minLength,jdbcType=INTEGER},
            </if>
            <if test="maxLength != null">
                #{maxLength,jdbcType=INTEGER},
            </if>
            <if test="regexFormat != null">
                #{regexFormat,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>


</mapper>
