<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
        namespace="org.opensrp.repository.postgres.mapper.custom.CustomSettingMetadataMapper">

    <resultMap id="SettingsAndSettingsMetadataMap" type="org.opensrp.domain.postgres.SettingsAndSettingsMetadataJoined">
        <result column="settings_id" jdbcType="BIGINT" property="settings.id"/>
        <result column="settings_configuration_json" jdbcType="OTHER" property="settings.json"
                typeHandler="org.opensrp.repository.postgres.handler.SettingTypeHandler"/>
        <result column="settings_metadata_id" jdbcType="BIGINT" property="settingsMetadata.id"/>
        <result column="settings_id" jdbcType="BIGINT" property="settingsMetadata.settingsId"/>
        <result column="document_id" jdbcType="VARCHAR" property="settingsMetadata.documentId"/>
        <result column="identifier" jdbcType="VARCHAR" property="settingsMetadata.identifier"/>
        <result column="server_version" jdbcType="BIGINT" property="settingsMetadata.serverVersion"/>
        <result column="team" jdbcType="VARCHAR" property="settingsMetadata.team"/>
        <result column="team_id" jdbcType="VARCHAR" property="settingsMetadata.teamId"/>
        <result column="provider_id" jdbcType="VARCHAR" property="settingsMetadata.providerId"/>
        <result column="location_id" jdbcType="VARCHAR" property="settingsMetadata.locationId"/>
        <result column="uuid" jdbcType="VARCHAR" property="settingsMetadata.uuid"/>
        <result column="settings_metadata_configuration_json" jdbcType="OTHER" property="settingsMetadata.json"
                typeHandler="org.opensrp.repository.postgres.handler.SettingMetadataTypeHandler"/>
        <result column="setting_type" jdbcType="VARCHAR" property="settingsMetadata.settingType"/>
        <result column="setting_value" jdbcType="VARCHAR" property="settingsMetadata.settingValue"/>
        <result column="setting_key" jdbcType="VARCHAR" property="settingsMetadata.settingKey"/>
        <result column="setting_description" jdbcType="VARCHAR" property="settingsMetadata.settingDescription"/>
        <result column="setting_label" jdbcType="VARCHAR" property="settingsMetadata.settingLabel"/>
        <result column="inherited_from" jdbcType="VARCHAR" property="settingsMetadata.inheritedFrom"/>
        <result column="metadata_version" jdbcType="BIGINT" property="settingsMetadata.metadataVersion"/>
    </resultMap>

    <sql id="Base_Column_List">
        s.json as settings_configuration_json, sm.id as settings_metadata_id, sm.json as
        settings_metadata_configuration_json, sm.*
    </sql>

    <sql id="Base_Table_List">
        FROM core.settings_metadata sm
        JOIN core.settings s ON
        sm.settings_id = s.id
    </sql>

    <select id="selectByDocumentId" resultMap="SettingsAndSettingsMetadataMap">
        select
        <include refid="Base_Column_List"/>
        <include refid="Base_Table_List"/>

        where sm.document_id = #{documentId,jdbcType=VARCHAR}
    </select>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and sm.${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and sm.${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and sm.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and sm.${criterion.condition}
                                    <foreach close=")" collection="criterion.value"
                                             item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <insert id="insertMany" parameterType="java.util.List">
        INSERT INTO core.settings_metadata (
        settings_id,
        document_id,
        identifier,
        server_version,
        team,
        team_id,
        provider_id,
        location_id,
        uuid,
        json,
        setting_type,
        setting_value,
        setting_key,
        setting_description,
        setting_label,
        inherited_from,
        metadata_version
        ) VALUES
        <foreach collection="settingsMetadata" item="setting" separator="," close=";">
            (
            #{setting.settingsId,jdbcType=BIGINT},
            #{setting.documentId,jdbcType=VARCHAR},
            #{setting.identifier,jdbcType=VARCHAR},
            #{setting.serverVersion,jdbcType=BIGINT},
            #{setting.team,jdbcType=VARCHAR},
            #{setting.teamId,jdbcType=VARCHAR},
            #{setting.providerId,jdbcType=VARCHAR},
            #{setting.locationId,jdbcType=VARCHAR},
            #{setting.uuid,jdbcType=VARCHAR},
            #{setting.json,jdbcType=OTHER,typeHandler=org.opensrp.repository.postgres.handler.SettingMetadataTypeHandler},
            #{setting.settingType,jdbcType=VARCHAR},
            #{setting.settingValue,jdbcType=VARCHAR},
            #{setting.settingKey,jdbcType=VARCHAR},
            #{setting.settingDescription,jdbcType=VARCHAR},
            #{setting.settingLabel,jdbcType=VARCHAR},
            #{setting.inheritedFrom,jdbcType=VARCHAR},
            nextVal('core.setting_metadata_version_seq')
            )
        </foreach>
    </insert>

    <update id="updateMany" parameterType="java.util.List">
        <foreach collection="settingsMetadata" item="setting" index="index" separator=";">
            UPDATE core.settings_metadata SET
            settings_id = #{setting.settingsId},
            document_id = #{setting.documentId},
            identifier = #{setting.identifier},
            server_version = #{setting.serverVersion},
            team = #{setting.team},
            team_id = #{setting.teamId},
            provider_id = #{setting.providerId},
            location_id = #{setting.locationId},
            uuid = #{setting.uuid},
            json =
            #{setting.json,jdbcType=OTHER,typeHandler=org.opensrp.repository.postgres.handler.SettingMetadataTypeHandler},
            setting_type = #{setting.settingType},
            setting_value = #{setting.settingValue},
            setting_key = #{setting.settingKey},
            setting_description = #{setting.settingDescription},
            setting_label = #{setting.settingLabel},
            inherited_from = #{setting.inheritedFrom},
            metadata_version = nextVal('core.setting_metadata_version_seq')
            WHERE uuid = #{setting.uuid}
            AND setting_key = #{setting.settingKey}
        </foreach>
    </update>

    <select id="selectMany" resultMap="SettingsAndSettingsMetadataMap">
        SELECT

        <if test="example.distinct">
            distinct
        </if>

        <include refid="Base_Column_List"/>
        <include refid="Base_Table_List"/>

        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>

        <if test="example.orderByClause != null">
            order by ${example.orderByClause}
        </if>

        LIMIT #{limit} OFFSET #{offset}
    </select>

</mapper>
